---
- name: spc 
  hosts: appserver
  become: yes
  tasks:
    - name: run on specified os
      ansible.builtin.fail:
        msg: " fail on unsupported os"
      when: ansible_facts['distribution']!= 'Ubuntu'
    - name: installing java
      ansible.builtin.apt:
        name: "{{ java }}"
        update_cache: yes
        state: present 
    - ansible.builtin.debug:
        msg: "installing java"
    - name: adding directory
      ansible.builtin.file:
        path: "{{ maven_dir }}"
        state: directory
        owner: "{{ owner }}"
        group: "{{ group }}"
        mode: "0755"
    - ansible.builtin.stat:
        path: "{{ maven_url }}"
      register: maven_file
    - name: building maven
      ansible.builtin.get_url:
        url: "{{ maven_url }}"
        dest: "{{ maven_dir }}"
      when: "not maven_file.stat.exists"
    - ansible.builtin.debug:
        msg: "builded maven"
    - name: xtracting the maven
      ansible.builtin.unarchive:
        src: "{{ maven_url }}"
        dest: /opt
        remote_src: yes
    - name: setting path variables
      ansible.builtin.lineinfile:
        path: "~/.bashrc"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        create: yes
      loop:
        - regexp: '^M2_HOME'
          line: 'M2_HOME="/opt/apache-maven-3.9.6/bin"'
        - regexp: '^PATH'
          line: 'PATH="$M2_HOME/bin:$PATH"'
        - regexp: '^export PATH'
          line: 'export PATH'
    - name: adding service 
      ansible.builtin.template:
        src: templates/spring-petclinic.service.j2
        dest: "/etc/systemd/system/spring-petclinic.service"
      notify:
        - restart spring-petclinic
  handlers:
    - name: restart 
      ansible.builtin.systemd:
        name: spring-petclinic
        state: restarted
        enabled: yes
        daemon_reload: yes
   