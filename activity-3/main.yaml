- name: installing tomcat
  hosts: appserver
  become: yes
  tasks:
    - name: fail for unsupported operating systems
      ansible.builtin.fail:
        msg: " This playbook is designed only for the Ubuntu os"
      when: ansible_facts['distribution'] != 'Ubuntu'
    - name: installing openjdk-11
      ansible.builtin.apt:
        name: "{{ java_package_name }}"
        update_cache: yes
        state: present
    - ansible.builtin.debug: 
        msg: "installed java with the help of {{ java_package_name}}"
    - name: creating group
      ansible.builtin.group:
        name: "{{group_name}}"
        state: present 
    - ansible.builtin.debug:
        msg: " user has been created with {{user_name}}"
    - name: creating user
      ansible.builtin.user:
        name: "{{ user_name }}"
        create_home: yes
        group: "{{ group_name}}"
        user: "{{ user_name }}"
        shell: "{{ user_shell }}"
        home: "{{ home_dir }}"
        system: true
        state: present
    - ansible.builtin.debug:
        msg: " user is created with {{user_name}}"
    - name: downloading tomcat
      ansible.builtin.get_url:
        url: "{{ tomcat_url }}"
        dest: /tmp/apache-tomcat-10.0.10.tar.gz
    - ansible.builtin.debug:
        msg: " tomcat downloaded using url {{tomcat_url}}"
    - ansible.builtin.stat:
        path: /tmp/apache-tomcat-10.0.10.tar.gz
      register: tomcat_tar_file
    - ansible.builtin.debug:
        msg: " download only if file not exists"
    - name: tar downloading
      ansible.builtin.unarchive:
        src: "{{ tomcat_url}}"
        dest: "{{ home_dir}}"
        owner: "{{ user_name }}"
        remote_src: yes
      when: " skip if the file tomcat_tar_file not exists"
    - ansible.builtin.debug:
        msg: " tar is xtracted to destination /tmp/apache-tomcat-10.0.10.tar.gz "
    - name: finding all the files
      find:
        paths: /opt/tomcat/apache-tomcat-10.0.10/bin
        pattern: '*.sh'
      register: shell_files
    - name: chane permissions to execute
      file:
        path: "{{ item.path}}"
        owner: "{{ user_name}}"
        group: "{{ group_name }}"
        mode: "755"
      loop: "{{ shell_files.files }}"