- name: installing tomcat
  hosts: appserver
  become: yes
  tasks:
    - name: fail for unsupported operating systems
      ansible.builtin.fail:
        msg: " This playbook is designed only for the Ubuntu os"
      when: ansible_facts['distribution'] != 'Ubuntu'
    - name: installing openjdk-11
      ansible.builtin.apt:
        name: "{{ java_package_name }}"
        update_cache: yes
        state: present
    - ansible.builtin.debug: 
        msg: "installed java with the help of {{ java_package_name}}"
    - name: creating group
      ansible.builtin.group:
        name: "{{group_name}}"
        state: present 
    - ansible.builtin.debug:
        msg: " user has been created with {{user_name}}"
    - name: creating user
      ansible.builtin.user:
        name: "{{ user_name }}"
        create_home: yes
        group: "{{ group_name}}"
        user: "{{ user_name }}"
        shell: "{{ user_shell }}"
        home: "{{ home_dir }}"
        system: true
        state: present
    - ansible.builtin.debug:
        msg: " user is created with {{user_name}}"
    - name: downloading tomcat
      ansible.builtin.get_url:
        url: "{{ tomcat_url }}"
        dest: /tmp/apache-tomcat-10.0.10.tar.gz
    - ansible.builtin.debug:
        msg: " tomcat downloaded using url {{tomcat_url}}"
    - ansible.builtin.stat:
        path: /opt/tomcat/apache-tomcat-10.0.10
      register: tomcat_tar_file
    - ansible.builtin.debug:
        msg: " download only if file not exists"
    - name: tar downloading
      ansible.builtin.unarchive:
        src: "{{ tomcat_url}}"
        dest: "{{ home_dir}}"
        owner: "{{ user_name }}"
        remote_src: yes
      when: "not tomcat_tar_file.stat.exists"
    - ansible.builtin.debug:
        msg: " tar is xtracted to destination {{ home_dir }} "
    - name: finding all the files
      find:
        paths: /opt/tomcat/apache-tomcat-10.0.10/bin
        pattern: '*.sh'
      register: shell_files
    - name: chane permissions to execute
      file:
        path: "{{ item.path}}"
        owner: "{{ user_name}}"
        group: "{{ group_name }}"
        mode: "765"
      loop: "{{ shell_files.files }}"
    - name: adding tomcat-user acc
      ansible.builtin.copy:
        src: files/tomcat-users.xml
        dest: "/opt/tomcat/apache-tomcat-10.0.10/conf/tomcat-user.xml"
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
        mode: "0600"
    - name: adding manager acc
      ansible.builtin.copy:
        src: files/manager.xml
        dest: "/opt/tomcat/apache-tomcat-10.0.10/webapps/manager/META-INF/context.xml"
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
        mode: "0640"
    - name: adding host-manager acc
      ansible.builtin.copy:
        src: files/host-manager.xml
        dest: "/opt/tomcat/apache-tomcat-10.0.10/webapps/host-manager/META-INF/context.xml"
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
        mode: "0640"
    - name: adding tomcat.service
      ansible.builtin.copy:
        src: files/tomcat.service
        dest: "/etc/systemd/system/tomcat.service"
      notify: 
        - start and enable tomcat-user
  handlers:
    - name: start and enable tomcat-user
      ansible.builtin.systemd_service:
        name: tomcat
        daemon_reload: yes
        enabled: yes
        state: started