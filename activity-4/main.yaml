- name: docker
  hosts: appserver
  become: yes
  tasks:
    - name: fail for unsupported operating systems
      ansible.builtin.fail:
        msg: "This palybook is written only for Ubuntu os"
      when: ansible_facts['distribution'] != "Ubuntu"
    - name : getting docker 
      ansible.builtin.get_url:
        url: "{{ docker_url }}"
        dest: /tmp/get-docker.sh
    - ansible.builtin.debug:
        msg: " docker installed on Ubuntu"
      notify:
        - restart docker
    - ansible.builtin.stat:
        path: "{{ home_dir }}"
      register: docker_file
    - ansible.builtin.debug:
        msg: " download only if not exists"
    - name: get docker script
      ansible.builtin.shell: "sh /tmp/get-docker.sh"
      when: "not docker_file.stat.exists"
    - ansible.builtin.debug:
        msg: " got docker script "
      notify:
        - restart docker 
    - ansible.builtin.stat:
        path: "{{ home_dir }}"
      register: docker_file
    - ansible.builtin.debug:
        msg: " download only if not exists"
    - name: get docker script
      ansible.builtin.shell: "sh /tmp/get-docker.sh"
      when: "not docker_file.stat.exists"
    - ansible.builtin.debug:
        msg: " got docker script "
      notify:
        - restart docker 
  handlers:
    - name: start docker 
      ansible.builtin.systemd_service:
        name: docker 
        enabled: true
        daemon_reload: yes
        state: started  
    - name: restart docker 
      ansible.builtin.systemd_service:
        name: docker
        enabled: true
        daemon_reload: yes
        state: restarted  

